name: Build
run-name: "Build #${{ github.run_number }}"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  modpack-info:
    name: Modpack Info
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.info.outputs.projectname }}
      packversion: ${{ steps.info.outputs.packversion }}
      mcversion: ${{ steps.info.outputs.mcversion }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout with fetch depth 2
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Get modpack info
        id: info
        run: |
          if [ ! -f pax/modpack/manifest.json ]; then
            echo "::error::Could not find manifest.json" && exit 1
          fi
          manifestjson=`cat pax/modpack/manifest.json`
          projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
          echo "projectname=$projectname" >> $GITHUB_OUTPUT
          packversion=`echo $(jq -r '.version' <<< "$manifestjson")`
          echo "packversion=$packversion" >> $GITHUB_OUTPUT
          mcversion=`echo $(jq -r '.minecraft.version' <<< "$manifestjson")`
          echo "mcversion=$mcversion" >> $GITHUB_OUTPUT
      - name: Get tag
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: tag_not_found
      - name: Checkout with fetch depth 0
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get mod changes
        shell: bash
        run: |
          set +e

          manifest="pax/modpack/manifest.json"

          branch=$(git rev-parse --abbrev-ref HEAD)
          previous_commit=$(git log -n 1 --skip 1 --pretty=format:"%h" -- $manifest)
          latest_commit=$(git log -n 1 --pretty=format:"%h" $branch -- $manifest)
          latest_tagged_commit=$(git rev-list --tags --max-count=1)
          latest_tag=$(git describe --tags --abbrev=0)

          echo "branch: $branch"
          echo "previous commit: $previous_commit"
          echo "latest commit: $latest_commit"
          echo "latest tagged commit: $latest_tagged_commit"
          echo "latest tag: $latest_tag"

          RED='\033[0;31m'
          GREEN='\033[0;32m'
          NC='\033[0m'

          function mod_changes {
            local mods_added_var1=$(git diff -W $latest_tagged_commit $latest_commit -- $manifest)
            local mods_added_var2=$(echo "$mods_added_var1" | grep -P -o -z '"files":[\s]*\[\K((?!.)[\s\S]*\}[\s]*\])*' | tr -d '\0')
            local mods_added_var3=$(echo "$mods_added_var2" | grep '^+' | grep -P -o '"name":[\s]*"\K[^"]*')

            local mods_removed_var1=$(git diff -W $latest_tagged_commit $latest_commit -- $manifest)
            local mods_removed_var2=$(echo "$mods_removed_var1" | grep -P -o -z '"files":[\s]*\[\K((?!.)[\s\S]*\}[\s]*\])*' | tr -d '\0')
            local mods_removed_var3=$(echo "$mods_removed_var2" | grep '^-' | grep -P -o '"name":[\s]*"\K[^"]*')

            if [[ ! -z ""$mods_added_var3"" ]]; then
              echo -e "${GREEN}Added:"
              echo 'Added:' >> $GITHUB_STEP_SUMMARY
              while IFS= read -r line1; do
                local foo=""
                while IFS= read -r line2; do
                  foo="${line1//$line2}"
                  if [[ -z ""$foo"" ]]; then
                    break
                  fi
                done <<< "$mods_removed_var3"
                if [[ ! -z ""$foo"" ]]; then
                  echo "- $foo"
                  echo "- $foo" >> $GITHUB_STEP_SUMMARY
                fi
              done <<< "$mods_added_var3"
            fi

            if [[ ! -z ""$mods_added_var3"" ]]; then
              echo -e "\n${RED}Removed:"
              echo 'Removed:' >> $GITHUB_STEP_SUMMARY
              while IFS= read -r line1; do
                local foo=""
                while IFS= read -r line2; do
                  foo="${line1//$line2}"
                  if [[ -z ""$foo"" ]]; then
                    break
                  fi
                done <<< "$mods_added_var3"
                if [[ ! -z ""$foo"" ]]; then
                  echo "- $foo"
                  echo "- $foo" >> $GITHUB_STEP_SUMMARY
                fi
              done <<< "$mods_removed_var3"
            fi
          }

          echo -e "x---------------x"
          echo -e "|  Mod Changes  |"
          echo '## Mod Changes' >> $GITHUB_STEP_SUMMARY
          echo "Since: \`$latest_tag\`" >> $GITHUB_STEP_SUMMARY
          echo '```markdown' >> $GITHUB_STEP_SUMMARY
          mod_changes
          echo -e "${NC}x---------------x"
          echo '```' >> $GITHUB_STEP_SUMMARY
      - name: Rename changelog
        run: mv CHANGELOG.md CHANGELOG-v${{ steps.info.outputs.packversion }}.md
      - name: Upload changelog
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: CHANGELOG-v${{ steps.info.outputs.packversion }}.md

  build-modpack:
    name: Build Modpack
    runs-on: ubuntu-latest
    needs: [modpack-info]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download changelog
        uses: actions/download-artifact@v3
        with:
          name: changelog
          path: pax/modpack
      - name: Sync overrides
        run: |
          cd pax/
          chmod +x ./sync_overrides.sh
          ./sync_overrides.sh
        shell: bash
      - name: Export modpack
        run: |
          cd pax/
          pax_version=$(grep -Po '(?<="PAX": ")[^"]*' setup.json)
          curl https://github.com/froehlichA/pax/releases/download/v$pax_version/pax -o pax -L -J
          sudo chmod +x ./pax
          ./pax export
      - name: Rename zip
        run: mv pax/.out/${{ needs.modpack-info.outputs.projectname }}.zip pax/.out/${{ needs.modpack-info.outputs.projectname }}-v${{ needs.modpack-info.outputs.packversion }}-build.${{ github.run_number }}.zip
      - name: Upload zip
        uses: actions/upload-artifact@v3
        with:
          name: modpack
          path: pax/.out/${{ needs.modpack-info.outputs.projectname }}-v${{ needs.modpack-info.outputs.packversion }}-build.${{ github.run_number }}.zip

  build-serverpack:
    name: Build Serverpack
    runs-on: ubuntu-latest
    needs: [modpack-info]
    if: ${{ needs.modpack-info.outputs.tag != 'tag_not_found' }}
    steps:
      - name: Check if CF_API_KEY exist
        shell: bash
        run: |
          if [ "${{ secrets.CF_API_KEY }}" == '' ]; then
            echo '::error::No value found for secret key `CF_API_KEY`. See https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository' && exit 1
          fi
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Mods
        env:
          CURSEFORGE_API_KEY: ${{ secrets.CF_API_KEY }}
        run: |
          mkdir ${GITHUB_WORKSPACE}/downloader
          cd pax/
          modpack_downloader_version=$(grep -Po '(?<="ModpackDownloader": ")[^"]*' setup.json)
          curl https://github.com/juraj-hrivnak/ModpackDownloader/releases/download/v$modpack_downloader_version/ModpackDownloader-$modpack_downloader_version-jar-with-dependencies.jar -o ModpackDownloader-$modpack_downloader_version-jar-with-dependencies.jar -L -J
          java -jar ModpackDownloader-$modpack_downloader_version-jar-with-dependencies.jar modpack downloader
          cd ../downloader/mods
          find . -type f -name '*.zip' -exec rm {} +
          mv ../mods ../../mods
      - name: Export serverpack
        run: |
          cd pax/
          server_pack_creator_version=$(grep -Po '(?<="ServerPackCreator": ")[^"]*' setup.json)
          cd serverpack/
          curl https://github.com/Griefed/ServerPackCreator/releases/download/$server_pack_creator_version/ServerPackCreator-$server_pack_creator_version.jar -o ./serverpack/ServerPackCreator-$server_pack_creator_version.jar -L -J
          java -jar ServerPackCreator-$server_pack_creator_version.jar -cli
      - name: Rename zip
        run: |
          mv pax/serverpack/server-packs/_server_pack.zip pax/serverpack/server-packs/${{ needs.modpack-info.outputs.projectname }}-v${{ needs.modpack-info.outputs.packversion }}-build.${{ github.run_number }}-Server-Pack.zip
      - name: Upload zip
        uses: actions/upload-artifact@v3
        with:
          name: serverpack
          path: pax/serverpack/server-packs/${{ needs.modpack-info.outputs.projectname }}-v${{ needs.modpack-info.outputs.packversion }}-build.${{ github.run_number }}-Server-Pack.zip

  release:
    name: Release
    needs: [modpack-info, build-modpack, build-serverpack]
    if: ${{ needs.modpack-info.outputs.tag != 'tag_not_found' }}
    uses: ./.github/workflows/Release.yml
    with:
      projectname: ${{ needs.modpack-info.outputs.projectname }}
      mcversion: ${{ needs.modpack-info.outputs.mcversion }}
      tag: ${{ needs.modpack-info.outputs.tag }}
      build: ${{ github.run_number }}
    secrets: inherit
